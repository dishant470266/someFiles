import {
  Dimensions,
  FlatList,
  ImageBackground,
  StyleSheet,
  Text,
  TextInput,
  TouchableOpacity,
  View,
} from 'react-native';
import React, {useEffect, useState} from 'react';
import Icon from 'react-native-vector-icons/Octicons';
import LinearGradient from 'react-native-linear-gradient';
import AsyncStorage from '@react-native-async-storage/async-storage';
import styles from './styles';
import {Store} from '../../../../utilities/Storage';

const School = ({route}: any) => {
  const [grade, setGrade] = useState([
    {id: 1, name: '1st'},
    {id: 2, name: '2nd'},
    {id: 3, name: '3rd'},
    {id: 4, name: '4th'},
    {id: 5, name: '5th'},
    {id: 6, name: '6th'},
    {id: 7, name: '7th'},
    {id: 8, name: '8th'},
    {id: 9, name: '9th'},
    {id: 10, name: '10th'},
    {id: 11, name: '11th'},
    {id: 12, name: '12th'},
  ]);
  const [Section, setSection] = useState([
    {id: 1, name: 'Section A'},
    {id: 2, name: 'Section B'},
    {id: 3, name: 'Section C'},
    {id: 4, name: 'Section D'},
    {id: 5, name: 'Section E'},
    {id: 6, name: 'Section F'},
    {id: 7, name: 'Section G'},
  ]);
  const [schoolList, setSchoolList] = useState([
    {id: 1, name: 'School 1'},
    {id: 2, name: 'School 2'},
    {id: 3, name: 'School 3'},
    {id: 4, name: 'School 4'},
    {id: 5, name: 'School 5'},
    {id: 6, name: 'School 6'},
    {id: 7, name: 'School 7'},
    {id: 8, name: 'School 8'},
    {id: 9, name: 'School 9'},
    {id: 10, name: 'School 10'},
    {id: 11, name: 'School 11'},
    {id: 12, name: 'School 12'},
  ]);
  const [DATA, setDATA] = useState<any>([]);
  const [listName, setListName] = useState('');
  const [selectedGrade, setSelectedGrade] = useState(grade[0]);
  const [selectedSchool, setSelectedSchool] = useState(schoolList[0]);
  const [selectedSection, setSelectedSection] = useState(Section[0]);
  const [currentschool, setCurrentschool] = useState<any>('');
  const [date, setDate] = useState<any>(new Date());
  const [show, setShow] = useState(false);
  const [dateGot, setDateGot] = useState('Select Date');
  const [modalVisible, setModalVisible] = useState(false);
  useEffect(() => {
    getSchoolInfo();
  }, []);
  useEffect(() => {
    // console.log('state updated : ');
    SaveSchoolDetails();
  }, [currentschool, selectedGrade, selectedSection, selectedSchool]);

  // console.log(route.params);
  const SaveSchoolDetails = async () => {
    await AsyncStorage.setItem(
      'TempSchoolDetails',
      JSON.stringify({
        currentSchool: currentschool,
        grade: selectedGrade,
        Section: selectedSection,
        PreviousSchool: selectedSchool,
      }),
    );
    // getUserInfo();
  };
  const getSchoolInfo = async () => {
    // var data: any = await AsyncStorage.getItem('SchoolDetails');
    const {school} = await Store.getData('userDetails');

    // data = JSON.parse(data);
    //  console.log('daata',data);
    //  if(data.userName){
    //    setName(data.userName);
    //    datafoundinstore=true;
    //  }

    //  setMobile(data.usermobile);
    //  setDateGot(data.dateofbirth);
    if (school) {
      setSelectedGrade(school.grade);
      setCurrentschool(school.currentSchool);
      setSelectedSection(school.Section);
      setSelectedSchool(school.PreviousSchool);
    }
  };

  const onChange = (event: any, selectedDate: string | number | Date) => {
    const currentDate = selectedDate;
    const d: any = new Date(selectedDate).toLocaleDateString('en-us', {
      day: '2-digit',
      month: 'long',
      year: 'numeric',
    });
    const t: any = new Date(selectedDate).toLocaleTimeString('en-us');
    setDateGot(d);
    setShow(false);
    setDate(currentDate);
  };
  return (
    <ImageBackground
      resizeMode="cover"
      source={require('../../../../../Assest/PageBG.jpg')}
      style={styles.bgroundImage}>
      <View>
        <View style={styles.inputcontainer}>
          <Text style={styles.currentSchoolTxt}>Current School</Text>
          <TextInput
            editable={!modalVisible}
            style={styles.input1}
            placeholderTextColor="#C384F8"
            placeholder="Enter Current School"
            value={currentschool}
            onChangeText={setCurrentschool}
          />
        </View>
        <View style={styles.inputcontainer}>
          <Text style={styles.gradeTxt}>Grade</Text>
          <TouchableOpacity
            onPress={() => {
              setListName('grade');
              setDATA(grade);
              setModalVisible(true);
            }}
            style={{...styles.input1, flexDirection: 'row'}}>
            <Text style={styles.selectedgradeTxt}>{selectedGrade.name} </Text>
            <Icon
              name="chevron-down"
              size={22}
              color={'#C384F8'}
              style={styles.downIcon}
            />
          </TouchableOpacity>
        </View>
        <View style={styles.inputcontainer}>
          <Text style={styles.sectionTxt}>Section</Text>
          <TouchableOpacity
            onPress={() => {
              setListName('section');
              setDATA(Section);
              setModalVisible(true);
            }}
            style={{...styles.input1, flexDirection: 'row'}}>
            <Text style={styles.selectedsectionTxt}>
              {selectedSection.name}
            </Text>
            <Icon
              name="chevron-down"
              size={22}
              color={'#C384F8'}
              style={styles.downIcon}
            />
          </TouchableOpacity>
        </View>
        <View style={styles.inputcontainer}>
          <Text style={styles.previousSchool}>Previous School</Text>
          <TouchableOpacity
            onPress={() => {
              setListName('school');
              setDATA(schoolList);
              setModalVisible(true);
            }}
            style={{
              ...styles.input1,
              flexDirection: 'row',
            }}>
            <Text style={styles.selectedSchoolText}>{selectedSchool.name}</Text>
            <Icon
              name="chevron-down"
              size={22}
              color={'#C384F8'}
              style={styles.downIcon}
            />
          </TouchableOpacity>
        </View>
      </View>
      {/* <TouchableOpacity onPress={()=>SchoolDetails()}>
      <LinearGradient colors={['#030F18', '#004A82']} style={styles.flashView}>
        <Text style={styles.AcceptText}>SAVE</Text>
      </LinearGradient>
      </TouchableOpacity> */}
      {modalVisible ? (
        <View style={styles.modalView}>
          <Text style={styles.modalHeader}>Select Grade</Text>
          <FlatList
            data={DATA}
            renderItem={({item, index}) => (
              <TouchableOpacity
                key={index}
                onPress={() => {
                  if (listName == 'grade') setSelectedGrade(item);
                  else if (listName == 'section') setSelectedSection(item);
                  else setSelectedSchool(item);
                  setModalVisible(false);
                }}>
                <Text style={styles.name}>{item.name}</Text>
              </TouchableOpacity>
            )}
          />
        </View>
      ) : null}
    </ImageBackground>
  );
};

export default School;
